<!--- 
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose
 
values DO NOT EXCEED FOUR MILLION, 

find the sum of the EVEN-VALUED terms. 

Formula:
	Fn = Fn-1 + Fn-2
	
--->
<!--- <cffunction name="recurse" access="public" returntype="numeric" output="yes">
	<cfargument name="n" required="yes" type="numeric">
		
		<!--- 
			End Condition:
			If the nth term is zero then the loop is complete 
		--->
		<cfif n EQ 0>
			
			<!--- Return True if loop complete --->
			<cfreturn 1>
		<cfelse>
			Recurse (#n#)th Loop <br />
			
			<!--- Recurse by calling the function within itself --->
			<cfreturn recurse(arguments.n-1)>
		</cfif>
</cffunction> --->

<!--- CORRECT ANSWER FOUND --->

<cfset tick = GetTickCount()>

<cfset A = (1 / Sqr(5))>
<cfset B = ((1+Sqr(5))/2)>
<cfset C = ((1-Sqr(5))/2)>
<cfset Fn = 0>
<cfset total = 0>

<!--- make run faster by deriving formula for largest two fibonacci numbers that equal 4 mil --->
<cfloop from=0 to=35 index="n">
	<cfif Fn LT 4000000>
		<cfset Fn = A*(((B)^n)-((C)^n))>
		
		<cfif Fn mod 2 EQ 0>
			<cfset total += Fn>
		</cfif>
		
		<cfoutput>#Fn# <br /></cfoutput>
	</cfif>
</cfloop>

<cfset tock = GetTickCount()>
<cfset time = (tock-tick)/1000>
<cfoutput>#Fn# (#total#) at #time# s</cfoutput>

<!--- <cfoutput>
	<cfset test = recurse(n)>
	#test# 
</cfoutput> --->
